"""
1 2 3 4 5 6 7 8 9
10 12 23 34 45 56 67 78 89
21 32 43 54 65 76 87 98

한 자리 늘어날 때마다 양쪽에 숫자 추가 가능
1: 0, 2를 양쪽에 추가 (01제외) => 3
2: 3을 양쪽에 추가 => 2
3: 4를 양쪽에 추가 => 2
4, 5, 6, 7, 8 => 10

오른쪽에만 추가할 수 없나
101
123, 121
234, 232
345, 343
456, ...
...
789, 787
898
212, 210
323, 321
...
989, 987

dp를 2차원으로 만들어서 마지막에 오는 자릿수에 따른 변화 ㄱㄱ
dp[n][0-9]
0
1 0,2 
2 1,3
3 2,4
4 3,5
5 4,6
6 5,7
7 6,8
8 7,9
9 8

0으로 끝나는 두 자리 수 => 1개 (1로 끝나는 자리 수 개수만큼)
1로 끝나는 두 자리 수 => 1개 (0으로 끝나는 자리 수 개수 + 2로 끝나는 자리 수 개수)
2~8로 끝나는 두 자리 수 => 2개 (n-1, n+1 자리 수 개수)
9로 끝나는 두 자리 수 => 1개 (8로 끝나는 자리 수 개수만큼)
"""

import sys
input = sys.stdin.readline

n = int(input())

# 초기화 (인덱스 0)
dp = [[0] * 10 for _ in range(n)]
dp[0] = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1]

# dp
for i in range(1, n):
    dp[i][0] = dp[i-1][1]
    dp[i][9] = dp[i-1][8]
    for j in range(1, 9):
        dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]

print(sum(dp[n-1]) % 1000000000)
